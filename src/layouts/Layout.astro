---
interface Props {
	title: string;
}

const { title } = Astro.props;
import "../styles/global.css";
---

<!doctype html>
<html lang="pl">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script is:inline>
			// Sprawdza i ustawia motyw na podstawie preferencji systemu lub zapisanych ustawień
			const getThemePreference = () => {
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme');
				}
				// Always default to dark mode
				return 'dark';
			}
			
			const theme = getThemePreference();
			
			document.documentElement.classList.toggle('dark', theme === 'dark');
			
			window.localStorage.setItem('theme', theme);
			
			// Nasłuchuje zmian preferencji systemowych - ale zachowuje dark mode jako default
			window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', ({matches}) => {
				// Only change if user hasn't explicitly set a preference
				if (!localStorage.getItem('theme')) {
					document.documentElement.classList.add('dark');
					window.localStorage.setItem('theme', 'dark');
				}
			});
		</script>
		
		<script is:inline>
			// Globalny mechanizm monitorowania sesji
			(function() {
				// Przechwyć natywną metodę fetch
				const originalFetch = window.fetch;
				
				// Zastąp ją własną implementacją
				window.fetch = async function(resource, options) {
					// Wywołaj oryginalny fetch
					const response = await originalFetch(resource, options);
					
					// Jeśli odpowiedź to 401 Unauthorized i nie jesteśmy już na stronie logowania
					if (response.status === 401 && !window.location.pathname.includes('/auth')) {
						// Klonujemy response, ponieważ oryginalny zostanie zużyty
						const clone = response.clone();
						
						try {
							// Sprawdź czy to na pewno odpowiedź z naszego API
							const data = await clone.json();
							if (data.error?.code === "UNAUTHORIZED") {
								console.log('Sesja wygasła. Przekierowywanie do strony logowania...');
								
								// Wyświetl informację dla użytkownika
								if (!window._sessionTimeoutNotified) {
									window._sessionTimeoutNotified = true;
									alert('Twoja sesja wygasła. Zostaniesz przekierowany do strony logowania.');
								}
								
								// Wyczyść dane sesji
								localStorage.removeItem('auth_token');
								localStorage.removeItem('user_id');
								localStorage.removeItem('user_email');
								document.cookie = "auth_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=Strict";
								
								// Przekieruj do strony logowania
								window.location.href = '/auth';
								return new Response(JSON.stringify({ redirected: true }));
							}
						} catch (e) {
							// Błąd parsowania JSON, to prawdopodobnie nie nasza odpowiedź API
							// Ignoruj i kontynuuj
						}
					}
					
					return response;
				};
				
				// Monitoruj również odpowiedzi XMLHttpRequest
				const originalXhrOpen = XMLHttpRequest.prototype.open;
				XMLHttpRequest.prototype.open = function() {
					this.addEventListener('load', function() {
						if (this.status === 401 && !window.location.pathname.includes('/auth')) {
							try {
								const data = JSON.parse(this.responseText);
								if (data.error?.code === "UNAUTHORIZED") {
									console.log('Sesja wygasła. Przekierowywanie do strony logowania...');
									
									// Wyświetl informację dla użytkownika
									if (!window._sessionTimeoutNotified) {
										window._sessionTimeoutNotified = true;
										alert('Twoja sesja wygasła. Zostaniesz przekierowany do strony logowania.');
									}
									
									// Wyczyść dane sesji
									localStorage.removeItem('auth_token');
									localStorage.removeItem('user_id');
									localStorage.removeItem('user_email');
									document.cookie = "auth_token=; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT; SameSite=Strict";
									
									// Przekieruj do strony logowania
									window.location.href = '/auth';
								}
							} catch (e) {
								// Błąd parsowania JSON, to prawdopodobnie nie nasza odpowiedź API
								// Ignoruj i kontynuuj
							}
						}
					});
					return originalXhrOpen.apply(this, arguments);
				};
			})();
		</script>
	</head>
	<body class="min-h-screen bg-background font-sans antialiased">
		<slot />
	</body>
</html>
